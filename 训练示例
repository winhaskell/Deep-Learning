训练示例

以下是一个使用 TensorFlow 和 Keras 进行模型训练的示例，展示了如何在训练过程中输出 Epoch 和 Loss：

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, LSTM
from tensorflow.keras.callbacks import ModelCheckpoint, EarlyStopping

# 生成一些示例数据
import numpy as np

timesteps = 10
input_dim = 1
num_classes = 3
X_train = np.random.random((1000, timesteps, input_dim))
y_train = np.random.randint(num_classes, size=(1000, 1))
y_train = tf.keras.utils.to_categorical(y_train, num_classes)

X_val = np.random.random((200, timesteps, input_dim))
y_val = np.random.randint(num_classes, size=(200, 1))
y_val = tf.keras.utils.to_categorical(y_val, num_classes)

# 创建一个简单的LSTM模型
model = Sequential([
    LSTM(128, input_shape=(timesteps, input_dim)),
    Dense(num_classes, activation='softmax')
])

# 编译模型
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# 设置回调函数
callbacks = [
    ModelCheckpoint(filepath='model.h5', monitor='val_loss', save_best_only=True),
    EarlyStopping(monitor='val_loss', patience=3)
]

# 训练模型
history = model.fit(
    X_train, y_train,
    epochs=10,
    batch_size=32,
    validation_data=(X_val, y_val),
    callbacks=callbacks
)

# 打印训练日志
print(history.history)


